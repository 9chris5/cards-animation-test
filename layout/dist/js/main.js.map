{"version":3,"sources":["cards.js","khk-cards.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["function createExpandableElement(node) {\r\n\r\n  /* create expansion wrapper element */\r\n  const element = document.createElement('div');\r\n  element.className = 'card__expand-wrapper';\r\n\r\n  /* get position of cloned element */\r\n  const position = node.getBoundingClientRect();\r\n\r\n  /* create and append overlay element */\r\n  const overlay = document.createElement('div');\r\n  overlay.className = 'card__expand-overlay';\r\n  element.appendChild(overlay);\r\n\r\n  /* append wrapper and clone clicked card */\r\n  document.body.appendChild(element);\r\n  element.appendChild(node.cloneNode(true));\r\n\r\n  /* set cloned element position */\r\n  element.lastChild.style.top = `${position.top}px`;\r\n\r\n  /* hide cloned card */\r\n  node.style.visibility = 'hidden';\r\n\r\n  return element;\r\n\r\n};\r\n\r\nfunction clearExpandWrapper() {\r\n\r\n  const elToClear = document.querySelector('.card__expand-wrapper');\r\n\r\n  if (elToClear) {\r\n    while (elToClear.lastChild) {\r\n      elToClear.removeChild(elToClear.lastChild);\r\n    }\r\n  }\r\n\r\n};\r\n\r\nfunction delay(time) {\r\n  return new Promise(resolve => setTimeout(resolve, time));\r\n};\r\n\r\nwindow.onload = () => {\r\n\r\n  const cards = document.querySelectorAll('.card');\r\n\r\n  if (cards) {\r\n\r\n    cards.forEach(card => {\r\n\r\n      card.addEventListener('click', e => {\r\n\r\n        const target = e.currentTarget;\r\n\r\n        clearExpandWrapper();\r\n        const clone = createExpandableElement(target);\r\n\r\n        const card = clone.querySelector('.card');\r\n        const items = {\r\n          tile: clone.querySelector('.card__tile'),\r\n          hiddenTile: clone.querySelector('.card__hidden-tile'),\r\n          image: clone.querySelector('.card__image'),\r\n          description: clone.querySelector('.card__description')\r\n        }\r\n        const overlay = document.querySelector('.card__expand-overlay');\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n          overlay.classList.add('transition');\r\n          overlay.style.opacity = 1;\r\n  \r\n          items.tile.classList.add('transition');\r\n          items.tile.style.transform = 'translateX(0)';\r\n\r\n        });\r\n\r\n        items.tile.addEventListener('transitionend', function handler() {\r\n\r\n          items.image.classList.add('transition');\r\n          items.image.style.transform = `\r\n            translateY(${0 - items.image.getBoundingClientRect().top}px)\r\n          `;\r\n\r\n          items.hiddenTile.classList.add('transition');\r\n\r\n          items.hiddenTile.style.transform = `\r\n            translateY(${items.image.getBoundingClientRect().height - items.hiddenTile.getBoundingClientRect().top}px)\r\n          `;\r\n\r\n          items.tile.style.transform = `\r\n            translateY(${items.image.getBoundingClientRect().height - items.tile.getBoundingClientRect().top}px)\r\n          `;\r\n\r\n          items.description.style.top = `${items.image.getBoundingClientRect().height * 2}px`;\r\n          items.description.style.height = `calc(100vh - ${items.image.getBoundingClientRect().height * 2}px)`;\r\n\r\n          this.removeEventListener('transitionend', handler);\r\n\r\n        });\r\n\r\n        items.image.addEventListener('transitionend', function handler() {\r\n\r\n          items.description.classList.add('transition');\r\n          items.description.style.opacity = 1;\r\n\r\n          target.style.visibility = 'visible';\r\n\r\n          const wrapper = document.querySelector('.card__expand-wrapper');\r\n\r\n          const exit = document.createElement('i');\r\n          wrapper.appendChild(exit);\r\n          exit.innerText = 'keyboard_backspace'\r\n          exit.className = 'material-icons card__icon';\r\n          exit.style.position = 'fixed';\r\n          exit.style.top = '3rem';\r\n          exit.style.left = '3rem'\r\n          exit.style.opacity = 0;\r\n          exit.classList.add('transition');\r\n          exit.style.opacity = 1;\r\n\r\n          exit.addEventListener('click', () => {\r\n            \r\n            wrapper.classList.add('transition');\r\n            wrapper.style.opacity = 0;\r\n\r\n            wrapper.addEventListener('transitionend', () => {\r\n              document.body.removeChild(wrapper);\r\n            })\r\n\r\n          })\r\n\r\n        });\r\n        \r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n}","// window.onload = () => {\r\n\r\n//   function createExpansionElement(node) {\r\n//     const expansion = document.createElement('div');\r\n//     expansion.className = 'khk-card__expansion';\r\n//     const nodePosition = node.getBoundingClientRect();\r\n    \r\n//     document.body.appendChild(expansion);\r\n//     expansion.appendChild(node.cloneNode(true));\r\n\r\n//     expansion.firstChild.style.position = 'fixed';\r\n//     expansion.firstChild.style.margin = 0;\r\n//     expansion.firstChild.style.width = `${nodePosition.width}px`;\r\n//     expansion.firstChild.style.height = `${nodePosition.height}px`;\r\n//     expansion.firstChild.style.top = `${nodePosition.top}px`;\r\n//     expansion.firstChild.style.left = `${nodePosition.left}px`;\r\n\r\n//     return expansion;\r\n//   };\r\n\r\n//   function calculateElementsPosition(elements) {\r\n//     let result = {};\r\n//     elements.forEach(element => {\r\n//       result[element.className.split('__')[1].replace(/ /, '')] = element.getBoundingClientRect();\r\n//     });\r\n//     return result;\r\n//   }\r\n\r\n//   function delay(time) {\r\n//     return new Promise(resolve => setTimeout(resolve, time));\r\n//   }\r\n\r\n// \t/* grab all the cards */\r\n// \tconst cards = document.querySelectorAll('.khk-card');\r\n\r\n// \tif (cards) {\r\n\r\n// \t\tcards.forEach(card => {\r\n\r\n//       const trigger = card.querySelector('.khk-card__icon-expand');\r\n\r\n// \t\t\ttrigger.addEventListener('click', e => {\r\n\r\n//         const existingExpansion = document.querySelector('.khk-card__expansion');\r\n\r\n//         if (existingExpansion) {\r\n//           existingExpansion.remove(existingExpansion.firstChild);\r\n//         }\r\n\r\n//         const exp = createExpansionElement(e.target.parentNode);\r\n//         e.target.parentNode.style.visibility = 'hidden';\r\n\r\n//         const image = exp.querySelector('.khk-card__image');\r\n//         const tile = exp.querySelector('.khk-card__tile');\r\n//         const hiddenTile = exp.querySelector('.khk-card__hidden-tile');\r\n//         const text = exp.querySelector('.khk-card__text');\r\n\r\n//         const first = calculateElementsPosition([image, tile, hiddenTile]);\r\n\r\n//         image.classList.add('expanded');\r\n//         tile.classList.add('expanded');\r\n//         hiddenTile.classList.add('expanded');\r\n\r\n//         const last = calculateElementsPosition([image, tile, hiddenTile]);\r\n\r\n//         image.classList.remove('expanded');\r\n//         tile.classList.remove('expanded');\r\n//         hiddenTile.classList.remove('expanded');\r\n\r\n//         image.style.transition = 'transform 300ms';\r\n//         tile.style.transition = 'transform 300ms';\r\n//         hiddenTile.style.transition = 'transform 300ms';\r\n\r\n//         text.style.transition = 'all 300ms';\r\n//         text.style.transform = 'translateY(-25px)';\r\n//         text.style.pointerEvents = 'auto';\r\n        \r\n//         requestAnimationFrame(() => {\r\n          \r\n//           tile.style.transform = `\r\n//           translateX(-${first.tile.left}px)\r\n//           `;\r\n          \r\n//           hiddenTile.style.transform = `\r\n//           scaleX(1.2)\r\n//           `;\r\n          \r\n//           // text.style.transform = `\r\n//           //   translateY(${})\r\n//           // `;\r\n          \r\n//           delay(299).then(() => {\r\n            \r\n//             tile.style.transition = '';\r\n//             tile.style.width = `${first.image.width / 2}px`;\r\n//             tile.style.height = `${first.image.height}px`;\r\n//             tile.style.top = `${first.image.top}px`;\r\n//             tile.style.left = 0;\r\n//             tile.classList.add('expanded');\r\n\r\n//             tile.style.transform = '';\r\n            \r\n//             image.style.transform = `\r\n//             translateY(${last.imageexpanded.top - first.image.top}px)\r\n//             translateX(${last.imageexpanded.left - first.image.left}px)\r\n//             scaleX(${(last.imageexpanded.width / first.image.width - 1) * 2 + 1})\r\n//             `;\r\n            \r\n//             return delay(1)\r\n            \r\n//           }).then(() => {\r\n            \r\n//             requestAnimationFrame(() => {\r\n              \r\n//               tile.style.transition = 'transform 300ms';\r\n//               tile.style.transform = `\r\n//               translateY(${last.imageexpanded.bottom - first.tile.top}px)\r\n//               `;\r\n              \r\n//               hiddenTile.style.transition = 'transform 300ms';\r\n//               hiddenTile.style.transform = `\r\n//               translateY(${last.imageexpanded.bottom - first.tile.top}px)\r\n//               scaleX(1.2)\r\n//               `;\r\n              \r\n//               return delay(300);\r\n              \r\n//             });\r\n\r\n//           }).then(() => {\r\n              \r\n//             text.style.opacity = 1;\r\n//             text.style.transform = '';\r\n\r\n//           });\r\n\r\n//         });\r\n\r\n// \t\t\t});\r\n\t\r\n// \t\t});\r\n\r\n// \t}\r\n\r\n// }"]}